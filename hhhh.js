const mineflayer = require('mineflayer');
const moment = require('moment-timezone');
const fs = require('fs');
const TelegramBot = require('node-telegram-bot-api');
const token = '5955630582:AAHRcA46_dfno6baRjdOdykh4yidQWmrhTw';
const telegramBot = new TelegramBot(token, { polling: true });
const timezone = 'Europe/Moscow'; // —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å, –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω—É–∂–Ω–æ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
const date2 = moment.tz(timezone).format('DD_MM_YYYY');
const logChat = fs.createWriteStream(`./Logs/Chat/logs-${date2}.txt`, { flags: 'a' });
const levenshtein = require('fast-levenshtein');

const bot = mineflayer.createBot({
  host: 'limbo.teslacraft.org', // limbo.teslacraft.org
  username: '–û—à–∏–±–∫–∞',
  password: 'kopplopp',
  version: '1.12.2',
  port: 25565
});

const chatId = "5230010894"
telegramBot.sendMessage(chatId, `–±–æ—Ç –∑–∞–ø—É—Å—Ç–∏–ª—Å—è`);
 //const logchat = fs.createWriteStream(`./Logs/Chat/logs-${date2}.txt`, { flags: 'a' });
const logCases = fs.createWriteStream(`./Logs/Cases/cases-logs-${date2}.txt`, { flags: 'a' });
const logTg = fs.createWriteStream(`./Logs/Telegram/tg-logs-${date2}.txt`, { flags: 'a' });

bot.once('spawn', function () {
    console.log("üü© –ë–æ—Ç –∑–∞—à–µ–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä");
    bot.chat("/hub");
    console.log("üì¶ –ë–æ—Ç –ø–µ—Ä–µ–º–µ—â–µ–Ω –≤ –õ–æ–±–±–∏");
    bot.chat("/limbo");
    console.log("üì¶ –ë–æ—Ç –ø–µ—Ä–µ–º–µ—â–µ–Ω –≤ –õ–∏–º–±–æ");
    bot.chat("/hub");
    console.log("üì¶ –ë–æ—Ç –ø–µ—Ä–µ–º–µ—â–µ–Ω –≤ –õ–æ–±–±–∏");
});

bot.on('message', (message) => {
    let msg = message.toString();
    const date = moment.tz(timezone).format('DD.MM.YYYY HH:mm:ss');
    if(!msg.startsWith(' ')){
        logChat.write(`[${date}] ${message}\n`);
        console.log(`[${date}] ${message}`);
    }});



const badWords = ['–ª–æ—Ö', '–ø–µ—Ç—É—Ö', '–£—Ä–æ–¥', '–û–±–æ—Å—Ä—ã—à', '–°–≤–∏–Ω–æ–º–∞—Ç–∫–∞', '—Å–æ—Å–∏', '—Å–æ—Å–Ω–∏', '—Å–∞—Å–∞–π', '–õ–æ—Ö', '–õ–æ—à–∞—Ä–∞', '–ò–¥–∏–æ—Ç', '–®–∫—É—Ä–∞', '–ü–µ—Ç—É—Ö', '—Å–≤–∏–Ω—å—è', '–ò–º–±–∏—Ü–∏–ª',
 '–ë–µ–∑–¥–∞—Ä', '–ë–æ–º–∂', '–ß—É—à–∫–∞', '–Ω–∏—â–∏–π', '–Ω–∏—â–∞—è', '—Å–∞—Å–∏', '—Å–æ—Å–∏', '—Å–æ—Å—ë—Ç', '—Å–æ—Å–µ—Ç', '–≤—ã—Å–µ—Ä',];

const players = {};

 

function checkMessage(player, message) {
    let count = 0;
    for (const word of badWords) {
      if (message.includes(word)) {
         count++;
      }
    }
    players[player] = players[player] || 0;
    players[player] += count;
    const date = moment.tz(timezone).format('DD.MM.YYYY HH:mm:ss');
    if (players[player] >= 3) {
    telegramBot.sendMessage(chatId, `[${date}] ${player} –æ—Ç–ø—Ä–∞–≤–∏–ª 3 –ø–ª–æ—Ö–∏—Ö —Å–ª–æ–≤–∞`);
      players[player] = 0;
    }
}

setInterval(() => {
    for (const player in players) {
       players[player] = 0;
   }
}, 20 * 68 * 1000);


bot.on('chat', (username, message) => {
    checkMessage(username, message);
    });

    const similarMessagesThreshold = 4;
const similarMessagesInterval = 90 * 1000; // 1.5 minutes in milliseconds

let lastMessages = {};

bot.on('chat', (username, message) => {
    const now = Date.now();

    checkMessage(username, message);

    if (!lastMessages[username]) {
        lastMessages[username] = { count: 1, timestamp: now, message };
    } else if (levenshtein.get(message.toLowerCase(), lastMessages[username].message.toLowerCase()) <= 2
      && now - lastMessages[username].timestamp < similarMessagesInterval) {
        lastMessages[username].count++;
        if (lastMessages[username].count >= similarMessagesThreshold) {
             const date = moment.tz(timezone).format('DD.MM.YYYY HH:mm:ss');
             const userIds = [5230010894, 1626707905];
             telegramBot.sendMessage(userId,
              `üìÖ:[${date}]\n–ò–≥—Ä–æ–∫ ${username} —Ñ–ª—É–¥–∏—Ç\n\n–û—Ç–ø—Ä–∞–≤–∫–∞ ${lastMessages[username].count} –ø–æ—Ö–æ–∂–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ 1.5 –º–∏–Ω—É—Ç—ã\n\n–ö–æ–º–∞–Ω–¥—ã:\n\n<code>/lookup ${username}</code>\n<code>/warn ${username} —Ñ–ª—É–¥</code>`, { parse_mode: 'html' });
             }}
            });
 
 function searchWordsByTemplate(template, words) {
    const regexString = template.replace(/\?/g, '.');
    const regex = new RegExp('^' + regexString + '$');
    let matchingWords = words.filter(word => regex.test(word));
    for (let i = 0; i < template.length; i++) {
      if (template[i] !== '?' && template[i] !== regexString[i]) {
        matchingWords = matchingWords.filter(word => word[i] === template[i]);
      }
    }
    return matchingWords;
}

telegramBot.onText(/\.—Å (.+)/, (msg, match) => {
  const words = fs.readFileSync('words.txt', 'utf-8').split('\n').map(word => word.trim()); // words.txt –∑–∞–º–µ–Ω—è–µ—à—å –Ω–∞ —Å–≤–æ—ë –Ω–∞–∑–≤–∞–Ω–∏–µ. —Ç–µ–∫—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç —É–∂–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–æ–∑–¥–∞–Ω, –¥–æ–ª–∂–µ–Ω –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Ç–∞–º –∂–µ, –≥–¥–µ –∏ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –±–æ—Ç–∞ (index.js)
  const chatId = msg.chat.id;
  const template = match[1];
  const foundWords = searchWordsByTemplate(template, words);
  const reply = foundWords.length === 0 ? '–°–ª–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ' : foundWords.join(', ');
  telegramBot.sendMessage(chatId, reply);
});





























































